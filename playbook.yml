# vagrant reload --provision
---
- hosts: all
  become: yes
  become_method: sudo
  tasks:
  - name: Run whoami without become
    command: whoami
    changed_when: false
    become: false
    register: whoami

  - name: Set a fact with the user name
    set_fact:
      login_user: "{{ whoami.stdout }}"

  - name: Update OS
    command: apt update

  - name: Install foundation packages
    apt: name={{ item }} state=latest install_recommends=no update_cache=yes
    loop: [ 'apt-transport-https', 'ca-certificates', 'curl', 'gcc', 'git', 'jq', 'make', 'software-properties-common', 'unzip', 'wget']

  - name: Install Python 3
    apt: name={{ item }} state=latest install_recommends=no update_cache=yes
    loop: ['python3', 'python3-dev', 'python3-pip', 'virtualenv', 'python3-setuptools']

  - name: Add Docker GPG apt key
    apt_key: state=present url='https://download.docker.com/linux/ubuntu/gpg'

  - name: Add Docker Repository
    apt_repository: state=present repo='deb https://download.docker.com/linux/ubuntu bionic stable'

  - name: Install docker-ce
    apt: update_cache=yes name=docker-ce state=latest

  - name: Add current user to group docker
    user: name="{{ login_user }}" groups=docker append=yes

  - name: Enable Docker
    systemd: name=docker state=restarted enabled=yes

  - name: Upgrade pip
    pip: name=pip state=latest executable=pip3

  - name: Install Python 3 modules
    pip: name={{ item }} executable=pip3
    loop:
      - awscli
      - boto3
      - docker
      - docker-compose

  - name: Download Golang
    unarchive:
      src:  https://golang.org/dl/go1.17.1.linux-amd64.tar.gz
      dest: /usr/local/
      remote_src: yes

  - name: Set a fact with the Go path
    set_fact:
      go_bin_dir: "/usr/local/go/bin"

  - name: Add {{ go_bin_dir }} to PATH
    lineinfile:
      dest: /etc/environment
      state: present
      backrefs: yes
      regexp: 'PATH=(["]*)((?!.*?{{ go_bin_dir }}).*?)(["]*)$'
      line: 'PATH=\1\2:{{ go_bin_dir }}\3'

  - name: Install Packer v1.6.6
    unarchive:
      src: https://releases.hashicorp.com/packer/1.6.6/packer_1.6.6_linux_amd64.zip
      dest: /usr/local/bin/
      remote_src: yes
      mode: '755'

  - name: Install Terraform 1.1.2
    unarchive:
      src: https://releases.hashicorp.com/terraform/1.1.2/terraform_1.1.2_linux_amd64.zip
      dest: /usr/local/bin/
      remote_src: yes
      mode: '755'

  - name: Install Terragrunt v0.35.16
    get_url:
      url: https://github.com/gruntwork-io/terragrunt/releases/download/v0.35.16/terragrunt_linux_amd64
      dest: /usr/local/bin/terragrunt
      mode: '755'

  - name: Install kubectl
    get_url:
      url: https://storage.googleapis.com/kubernetes-release/release/v1.20.0/bin/linux/amd64/kubectl
      dest: /usr/local/bin/kubectl
      mode: '755'

  - name: Install helm
    get_url:
      url:  https://mirror.openshift.com/pub/openshift-v4/clients/helm/latest/helm-linux-amd64
      dest: /usr/local/bin/helm
      mode: '755'

  - name: Install yq
    get_url:
      url: https://github.com/mikefarah/yq/releases/download/v4.2.0/yq_linux_amd64
      dest: /usr/local/bin/yq
      mode: '755'

  - name: Install sops
    get_url:
      url: https://github.com/mozilla/sops/releases/download/v3.7.1/sops-v3.7.1.linux
      dest: /usr/local/bin/sops
      mode: '755'

  - name: Copy SSH key files
    copy:
      src: /tmp/ssh_config/{{ item }}
      dest: /home/{{ login_user }}/.ssh/
      owner: "{{ login_user }}"
      group: "{{ login_user }}"
      mode: '0600'
      remote_src: yes
    with_items:
      - id_rsa
      - id_rsa.pub

  # - name: Copy AWS configs
  #   copy:
  #     src: /tmp/aws_config/
  #     dest: /home/{{ login_user }}/.aws/
  #     owner: "{{ login_user }}"
  #     group: "{{ login_user }}"
  #     mode: '0600'
  #     remote_src: yes

  - name: Add host's public key to authorized_keys for SSH purpose
    blockinfile:
      path: /home/{{ login_user }}/.ssh/authorized_keys
      block: "{{ lookup('file', '/home/{{ login_user }}/.ssh/id_rsa.pub') }}"
      state: present
    become: no

  - name: Configure Git
    shell: |
      git config --system alias.co checkout
      git config --system alias.st status
      git config --system core.autocrlf input
      git config --system core.editor vim
      git config --system push.default current
